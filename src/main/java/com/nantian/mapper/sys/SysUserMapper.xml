<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nantian.mapper.sys.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.nantian.entity.sys.SysUser">
    <result column="ID" jdbcType="DECIMAL" property="id" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="ORG_NO" jdbcType="VARCHAR" property="orgNo" />
    <result column="PHONE_NO" jdbcType="VARCHAR" property="phoneNo" />
    <result column="LANDLINE" jdbcType="VARCHAR" property="landline" />
    <result column="ID_CARD" jdbcType="VARCHAR" property="idCard" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="ADRESS" jdbcType="VARCHAR" property="adress" />
    <result column="ZIP_CODE" jdbcType="VARCHAR" property="zipCode" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="EXTEND1" jdbcType="VARCHAR" property="extend1" />
    <result column="EXTEND2" jdbcType="VARCHAR" property="extend2" />
    <result column="LOGIN_TIME" jdbcType="VARCHAR" property="loginTime" />
    <result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="ERROR_COUNT" jdbcType="DECIMAL" property="errorCount" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="SEX" jdbcType="VARCHAR" property="sex" />
    <result column="COMPANY" jdbcType="VARCHAR" property="company" />
    <result column="POSITION" jdbcType="VARCHAR" property="position" />
    <result column="POSITION_LEVEL" jdbcType="VARCHAR" property="positionLevel" />
    <result column="BIRTH_DATE" jdbcType="VARCHAR" property="birthDate" />
    <result column="POLITICS_STATUS" jdbcType="VARCHAR" property="politicsStatus" />
    <result column="EDUCATION" jdbcType="VARCHAR" property="education" />
    <result column="IN_POSITION_TIME" jdbcType="VARCHAR" property="inPositionTime" />
    <result column="IN_SAME_POSITION_TIME" jdbcType="VARCHAR" property="inSamePositionTime" />
    <result column="IN_SAME_POSITION_LEVEL_TIME" jdbcType="VARCHAR" property="inSamePositionLevelTime" />
    <result column="INTO_BANK_TIME" jdbcType="VARCHAR" property="intoBankTime" />
    <result column="LAST_YEAR_INSPECTION_RESULT" jdbcType="VARCHAR" property="lastYearInspectionResult" />
    <result column="PUNISHMENT" jdbcType="VARCHAR" property="punishment" />
    <result column="EXCEPTIONAL" jdbcType="VARCHAR" property="exceptional" />
    <result column="AVOID" jdbcType="VARCHAR" property="avoid" />
    <result column="ASPIRING_POSITION" jdbcType="VARCHAR" property="aspiringPosition" />
    <result column="ASPIRING_POSITION_LEVEL" jdbcType="VARCHAR" property="aspiringPositionLevel" />
    <result column="RECOMMENDATION_LETTER" jdbcType="VARCHAR" property="recommendationLetter" />
    <result column="NOTE" jdbcType="VARCHAR" property="note" />
    <result column="USERNO" jdbcType="VARCHAR" property="userno" />
    <result column="ORG_TYPE" jdbcType="VARCHAR" property="orgType" />
    <result column="ORG" jdbcType="VARCHAR" property="org" />
    <result column="POSITION_SERIAL" jdbcType="VARCHAR" property="positionSerial" />
    <result column="SKILL_LEVEL" jdbcType="VARCHAR" property="skillLevel" />
    <result column="AGE" jdbcType="VARCHAR" property="age" />
    <result column="SKILL_QUALIFICATION" jdbcType="VARCHAR" property="skillQualification" />
    <result column="SECOND_YEAR_INSPECTION_RESULT" jdbcType="VARCHAR" property="secondYearInspectionResult" />
    <result column="THIRD_YEAR_INSPECTION_RESULT" jdbcType="VARCHAR" property="thirdYearInspectionResult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, USERNAME, PASSWORD, NAME, ORG_NO, PHONE_NO, LANDLINE, ID_CARD, EMAIL, ADRESS, 
    ZIP_CODE, STATUS, EXTEND1, EXTEND2, LOGIN_TIME, LAST_LOGIN_TIME, ERROR_COUNT, CREATION_TIME, 
    UPDATE_TIME, SEX, COMPANY, POSITION, POSITION_LEVEL, BIRTH_DATE, POLITICS_STATUS, 
    EDUCATION, IN_POSITION_TIME, IN_SAME_POSITION_TIME, IN_SAME_POSITION_LEVEL_TIME, 
    INTO_BANK_TIME, LAST_YEAR_INSPECTION_RESULT, PUNISHMENT, EXCEPTIONAL, AVOID, ASPIRING_POSITION, 
    ASPIRING_POSITION_LEVEL, RECOMMENDATION_LETTER, NOTE, USERNO, ORG_TYPE, ORG, POSITION_SERIAL, 
    SKILL_LEVEL, AGE, SKILL_QUALIFICATION, SECOND_YEAR_INSPECTION_RESULT, THIRD_YEAR_INSPECTION_RESULT
  </sql>
  <select id="selectByExample" parameterType="com.nantian.entity.sys.SysUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from SYS_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.nantian.entity.sys.SysUserExample">
    delete from SYS_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from SYS_USER
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from SYS_USER
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <select id="getUserPart"  parameterType="com.nantian.entity.sys.SysUser">
    select id ,unint company,position ,positionLevel
    where ID = #{id,jdbcType=DECIMAL}

  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.nantian.entity.sys.SysUser">
    update SYS_USER
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="orgNo != null">
        ORG_NO = #{orgNo,jdbcType=VARCHAR},
      </if>
      <if test="phoneNo != null">
        PHONE_NO = #{phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="landline != null">
        LANDLINE = #{landline,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        ID_CARD = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="adress != null">
        ADRESS = #{adress,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        ZIP_CODE = #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="extend1 != null">
        EXTEND1 = #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        EXTEND2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        LOGIN_TIME = #{loginTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="errorCount != null">
        ERROR_COUNT = #{errorCount,jdbcType=DECIMAL},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        COMPANY = #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        POSITION = #{position,jdbcType=VARCHAR},
      </if>
      <if test="positionLevel != null">
        POSITION_LEVEL = #{positionLevel,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        BIRTH_DATE = #{birthDate,jdbcType=VARCHAR},
      </if>
      <if test="politicsStatus != null">
        POLITICS_STATUS = #{politicsStatus,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        EDUCATION = #{education,jdbcType=VARCHAR},
      </if>
      <if test="inPositionTime != null">
        IN_POSITION_TIME = #{inPositionTime,jdbcType=VARCHAR},
      </if>
      <if test="inSamePositionTime != null">
        IN_SAME_POSITION_TIME = #{inSamePositionTime,jdbcType=VARCHAR},
      </if>
      <if test="inSamePositionLevelTime != null">
        IN_SAME_POSITION_LEVEL_TIME = #{inSamePositionLevelTime,jdbcType=VARCHAR},
      </if>
      <if test="intoBankTime != null">
        INTO_BANK_TIME = #{intoBankTime,jdbcType=VARCHAR},
      </if>
      <if test="lastYearInspectionResult != null">
        LAST_YEAR_INSPECTION_RESULT = #{lastYearInspectionResult,jdbcType=VARCHAR},
      </if>
      <if test="punishment != null">
        PUNISHMENT = #{punishment,jdbcType=VARCHAR},
      </if>
      <if test="exceptional != null">
        EXCEPTIONAL = #{exceptional,jdbcType=VARCHAR},
      </if>
      <if test="avoid != null">
        AVOID = #{avoid,jdbcType=VARCHAR},
      </if>
      <if test="aspiringPosition != null">
        ASPIRING_POSITION = #{aspiringPosition,jdbcType=VARCHAR},
      </if>
      <if test="aspiringPositionLevel != null">
        ASPIRING_POSITION_LEVEL = #{aspiringPositionLevel,jdbcType=VARCHAR},
      </if>
      <if test="recommendationLetter != null">
        RECOMMENDATION_LETTER = #{recommendationLetter,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        NOTE = #{note,jdbcType=VARCHAR},
      </if>
      <if test="userno != null">
        USERNO = #{userno,jdbcType=VARCHAR},
      </if>
      <if test="orgType != null">
        ORG_TYPE = #{orgType,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        ORG = #{org,jdbcType=VARCHAR},
      </if>
      <if test="positionSerial != null">
        POSITION_SERIAL = #{positionSerial,jdbcType=VARCHAR},
      </if>
      <if test="skillLevel != null">
        SKILL_LEVEL = #{skillLevel,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        AGE = #{age,jdbcType=VARCHAR},
      </if>
      <if test="skillQualification != null">
        SKILL_QUALIFICATION = #{skillQualification,jdbcType=VARCHAR},
      </if>
      <if test="secondYearInspectionResult != null">
        SECOND_YEAR_INSPECTION_RESULT = #{secondYearInspectionResult,jdbcType=VARCHAR},
      </if>
      <if test="thirdYearInspectionResult != null">
        THIRD_YEAR_INSPECTION_RESULT = #{thirdYearInspectionResult,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nantian.entity.sys.SysUser">
    update SYS_USER
    set USERNAME = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      ORG_NO = #{orgNo,jdbcType=VARCHAR},
      PHONE_NO = #{phoneNo,jdbcType=VARCHAR},
      LANDLINE = #{landline,jdbcType=VARCHAR},
      ID_CARD = #{idCard,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      ADRESS = #{adress,jdbcType=VARCHAR},
      ZIP_CODE = #{zipCode,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      EXTEND1 = #{extend1,jdbcType=VARCHAR},
      EXTEND2 = #{extend2,jdbcType=VARCHAR},
      LOGIN_TIME = #{loginTime,jdbcType=VARCHAR},
      LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      ERROR_COUNT = #{errorCount,jdbcType=DECIMAL},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      SEX = #{sex,jdbcType=VARCHAR},
      COMPANY = #{company,jdbcType=VARCHAR},
      POSITION = #{position,jdbcType=VARCHAR},
      POSITIONLEVEL = #{positionLevel,jdbcType=VARCHAR},
      BIRTHDATE = #{birthDate,jdbcType=VARCHAR},
      POLITICSSTATUS = #{politicsStatus,jdbcType=VARCHAR},
      EDUCATION = #{education,jdbcType=VARCHAR},
      INPOSITIONTIME = #{inPositionTime,jdbcType=VARCHAR},
      INSAMEPOSITIONTIME = #{inSamePositionTime,jdbcType=VARCHAR},
      insamepositionleveltime = #{inSamePositionLevelTime,jdbcType=VARCHAR},
      INTOBANKTIME = #{intoBankTime,jdbcType=VARCHAR},
      LASTYEARINSPECTIONRESULT = #{lastYearInspectionResult,jdbcType=VARCHAR},
      PUNISHMENT = #{punishment,jdbcType=VARCHAR},
      EXCEPTIONAL = #{exceptional,jdbcType=VARCHAR},
      AVOID = #{avoid,jdbcType=VARCHAR},
      ASPIRINGPOSITION = #{aspiringPosition,jdbcType=VARCHAR},
      ASPIRINGPOSITIONLEVEL = #{aspiringPositionLevel,jdbcType=VARCHAR},
      RECOMMENDATIONLETTER = #{recommendationLetter,jdbcType=VARCHAR},
      NOTE = #{note,jdbcType=VARCHAR},
      USERNO = #{userno,jdbcType=VARCHAR},
      ORGTYPE = #{orgType,jdbcType=VARCHAR},
      ORG = #{org,jdbcType=VARCHAR},
      POSITIONSERIAL = #{positionSerial,jdbcType=VARCHAR},
      SKILLLEVEL = #{skillLevel,jdbcType=VARCHAR},
      AGE = #{age,jdbcType=VARCHAR},
      SKILLQUALIFICATION = #{skillQualification,jdbcType=VARCHAR},
      SECONDYEARINSPECTIONRESULT = #{secondYearInspectionResult,jdbcType=VARCHAR},
      THIRDYEARINSPECTIONRESULT = #{thirdYearInspectionResult,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <insert id="insert" parameterType="com.nantian.entity.sys.SysUser">
    insert into SYS_USER (ID, USERNAME, PASSWORD,
      NAME, ORG_NO, PHONE_NO, 
      LANDLINE, ID_CARD, EMAIL, 
      ADRESS, ZIP_CODE, STATUS, 
      EXTEND1, EXTEND2, LOGIN_TIME, 
      LAST_LOGIN_TIME, ERROR_COUNT, CREATION_TIME, 
      UPDATE_TIME, SEX, COMPANY, 
      POSITION, POSITION_LEVEL, BIRTH_DATE, 
      POLITICS_STATUS, EDUCATION, IN_POSITION_TIME, 
      IN_SAME_POSITION_TIME, IN_SAME_POSITION_LEVEL_TIME, 
      INTO_BANK_TIME, LAST_YEAR_INSPECTION_RESULT, 
      PUNISHMENT, EXCEPTIONAL, AVOID, 
      ASPIRING_POSITION, ASPIRING_POSITION_LEVEL, 
      RECOMMENDATION_LETTER, NOTE, USERNO, 
      ORG_TYPE, ORG, POSITION_SERIAL, 
      SKILL_LEVEL, AGE, SKILL_QUALIFICATION, 
      SECOND_YEAR_INSPECTION_RESULT, THIRD_YEAR_INSPECTION_RESULT
      )
    values (#{id,jdbcType=DECIMAL}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{orgNo,jdbcType=VARCHAR}, #{phoneNo,jdbcType=VARCHAR}, 
      #{landline,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{adress,jdbcType=VARCHAR}, #{zipCode,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{extend1,jdbcType=VARCHAR}, #{extend2,jdbcType=VARCHAR}, #{loginTime,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{errorCount,jdbcType=DECIMAL}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{sex,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{positionLevel,jdbcType=VARCHAR}, #{birthDate,jdbcType=VARCHAR}, 
      #{politicsStatus,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{inPositionTime,jdbcType=VARCHAR}, 
      #{inSamePositionTime,jdbcType=VARCHAR}, #{inSamePositionLevelTime,jdbcType=VARCHAR}, 
      #{intoBankTime,jdbcType=VARCHAR}, #{lastYearInspectionResult,jdbcType=VARCHAR}, 
      #{punishment,jdbcType=VARCHAR}, #{exceptional,jdbcType=VARCHAR}, #{avoid,jdbcType=VARCHAR}, 
      #{aspiringPosition,jdbcType=VARCHAR}, #{aspiringPositionLevel,jdbcType=VARCHAR}, 
      #{recommendationLetter,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{userno,jdbcType=VARCHAR}, 
      #{orgType,jdbcType=VARCHAR}, #{org,jdbcType=VARCHAR}, #{positionSerial,jdbcType=VARCHAR}, 
      #{skillLevel,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, #{skillQualification,jdbcType=VARCHAR}, 
      #{secondYearInspectionResult,jdbcType=VARCHAR}, #{thirdYearInspectionResult,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nantian.entity.sys.SysUser">
    insert into SYS_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="orgNo != null">
        ORG_NO,
      </if>
      <if test="phoneNo != null">
        PHONE_NO,
      </if>
      <if test="landline != null">
        LANDLINE,
      </if>
      <if test="idCard != null">
        ID_CARD,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="adress != null">
        ADRESS,
      </if>
      <if test="zipCode != null">
        ZIP_CODE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="extend1 != null">
        EXTEND1,
      </if>
      <if test="extend2 != null">
        EXTEND2,
      </if>
      <if test="loginTime != null">
        LOGIN_TIME,
      </if>
      <if test="lastLoginTime != null">
        LAST_LOGIN_TIME,
      </if>
      <if test="errorCount != null">
        ERROR_COUNT,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="company != null">
        COMPANY,
      </if>
      <if test="position != null">
        POSITION,
      </if>
      <if test="positionLevel != null">
        POSITION_LEVEL,
      </if>
      <if test="birthDate != null">
        BIRTH_DATE,
      </if>
      <if test="politicsStatus != null">
        POLITICS_STATUS,
      </if>
      <if test="education != null">
        EDUCATION,
      </if>
      <if test="inPositionTime != null">
        IN_POSITION_TIME,
      </if>
      <if test="inSamePositionTime != null">
        IN_SAME_POSITION_TIME,
      </if>
      <if test="inSamePositionLevelTime != null">
        IN_SAME_POSITION_LEVEL_TIME,
      </if>
      <if test="intoBankTime != null">
        INTO_BANK_TIME,
      </if>
      <if test="lastYearInspectionResult != null">
        LAST_YEAR_INSPECTION_RESULT,
      </if>
      <if test="punishment != null">
        PUNISHMENT,
      </if>
      <if test="exceptional != null">
        EXCEPTIONAL,
      </if>
      <if test="avoid != null">
        AVOID,
      </if>
      <if test="aspiringPosition != null">
        ASPIRING_POSITION,
      </if>
      <if test="aspiringPositionLevel != null">
        ASPIRING_POSITION_LEVEL,
      </if>
      <if test="recommendationLetter != null">
        RECOMMENDATION_LETTER,
      </if>
      <if test="note != null">
        NOTE,
      </if>
      <if test="userno != null">
        USERNO,
      </if>
      <if test="orgType != null">
        ORG_TYPE,
      </if>
      <if test="org != null">
        ORG,
      </if>
      <if test="positionSerial != null">
        POSITION_SERIAL,
      </if>
      <if test="skillLevel != null">
        SKILL_LEVEL,
      </if>
      <if test="age != null">
        AGE,
      </if>
      <if test="skillQualification != null">
        SKILL_QUALIFICATION,
      </if>
      <if test="secondYearInspectionResult != null">
        SECOND_YEAR_INSPECTION_RESULT,
      </if>
      <if test="thirdYearInspectionResult != null">
        THIRD_YEAR_INSPECTION_RESULT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="orgNo != null">
        #{orgNo,jdbcType=VARCHAR},
      </if>
      <if test="phoneNo != null">
        #{phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="landline != null">
        #{landline,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="adress != null">
        #{adress,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="extend1 != null">
        #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="errorCount != null">
        #{errorCount,jdbcType=DECIMAL},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="positionLevel != null">
        #{positionLevel,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        #{birthDate,jdbcType=VARCHAR},
      </if>
      <if test="politicsStatus != null">
        #{politicsStatus,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="inPositionTime != null">
        #{inPositionTime,jdbcType=VARCHAR},
      </if>
      <if test="inSamePositionTime != null">
        #{inSamePositionTime,jdbcType=VARCHAR},
      </if>
      <if test="inSamePositionLevelTime != null">
        #{inSamePositionLevelTime,jdbcType=VARCHAR},
      </if>
      <if test="intoBankTime != null">
        #{intoBankTime,jdbcType=VARCHAR},
      </if>
      <if test="lastYearInspectionResult != null">
        #{lastYearInspectionResult,jdbcType=VARCHAR},
      </if>
      <if test="punishment != null">
        #{punishment,jdbcType=VARCHAR},
      </if>
      <if test="exceptional != null">
        #{exceptional,jdbcType=VARCHAR},
      </if>
      <if test="avoid != null">
        #{avoid,jdbcType=VARCHAR},
      </if>
      <if test="aspiringPosition != null">
        #{aspiringPosition,jdbcType=VARCHAR},
      </if>
      <if test="aspiringPositionLevel != null">
        #{aspiringPositionLevel,jdbcType=VARCHAR},
      </if>
      <if test="recommendationLetter != null">
        #{recommendationLetter,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="userno != null">
        #{userno,jdbcType=VARCHAR},
      </if>
      <if test="orgType != null">
        #{orgType,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        #{org,jdbcType=VARCHAR},
      </if>
      <if test="positionSerial != null">
        #{positionSerial,jdbcType=VARCHAR},
      </if>
      <if test="skillLevel != null">
        #{skillLevel,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="skillQualification != null">
        #{skillQualification,jdbcType=VARCHAR},
      </if>
      <if test="secondYearInspectionResult != null">
        #{secondYearInspectionResult,jdbcType=VARCHAR},
      </if>
      <if test="thirdYearInspectionResult != null">
        #{thirdYearInspectionResult,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nantian.entity.sys.SysUserExample" resultType="java.lang.Long">
    select count(*) from SYS_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SYS_USER
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.orgNo != null">
        ORG_NO = #{record.orgNo,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNo != null">
        PHONE_NO = #{record.phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="record.landline != null">
        LANDLINE = #{record.landline,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.adress != null">
        ADRESS = #{record.adress,jdbcType=VARCHAR},
      </if>
      <if test="record.zipCode != null">
        ZIP_CODE = #{record.zipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.extend1 != null">
        EXTEND1 = #{record.extend1,jdbcType=VARCHAR},
      </if>
      <if test="record.extend2 != null">
        EXTEND2 = #{record.extend2,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null">
        LOGIN_TIME = #{record.loginTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.errorCount != null">
        ERROR_COUNT = #{record.errorCount,jdbcType=DECIMAL},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null">
        SEX = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        COMPANY = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        POSITION = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.positionLevel != null">
        POSITION_LEVEL = #{record.positionLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.birthDate != null">
        BIRTH_DATE = #{record.birthDate,jdbcType=VARCHAR},
      </if>
      <if test="record.politicsStatus != null">
        POLITICS_STATUS = #{record.politicsStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        EDUCATION = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.inPositionTime != null">
        IN_POSITION_TIME = #{record.inPositionTime,jdbcType=VARCHAR},
      </if>
      <if test="record.inSamePositionTime != null">
        IN_SAME_POSITION_TIME = #{record.inSamePositionTime,jdbcType=VARCHAR},
      </if>
      <if test="record.inSamePositionLevelTime != null">
        IN_SAME_POSITION_LEVEL_TIME = #{record.inSamePositionLevelTime,jdbcType=VARCHAR},
      </if>
      <if test="record.intoBankTime != null">
        INTO_BANK_TIME = #{record.intoBankTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lastYearInspectionResult != null">
        LAST_YEAR_INSPECTION_RESULT = #{record.lastYearInspectionResult,jdbcType=VARCHAR},
      </if>
      <if test="record.punishment != null">
        PUNISHMENT = #{record.punishment,jdbcType=VARCHAR},
      </if>
      <if test="record.exceptional != null">
        EXCEPTIONAL = #{record.exceptional,jdbcType=VARCHAR},
      </if>
      <if test="record.avoid != null">
        AVOID = #{record.avoid,jdbcType=VARCHAR},
      </if>
      <if test="record.aspiringPosition != null">
        ASPIRING_POSITION = #{record.aspiringPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.aspiringPositionLevel != null">
        ASPIRING_POSITION_LEVEL = #{record.aspiringPositionLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendationLetter != null">
        RECOMMENDATION_LETTER = #{record.recommendationLetter,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        NOTE = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.userno != null">
        USERNO = #{record.userno,jdbcType=VARCHAR},
      </if>
      <if test="record.orgType != null">
        ORG_TYPE = #{record.orgType,jdbcType=VARCHAR},
      </if>
      <if test="record.org != null">
        ORG = #{record.org,jdbcType=VARCHAR},
      </if>
      <if test="record.positionSerial != null">
        POSITION_SERIAL = #{record.positionSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.skillLevel != null">
        SKILL_LEVEL = #{record.skillLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        AGE = #{record.age,jdbcType=VARCHAR},
      </if>
      <if test="record.skillQualification != null">
        SKILL_QUALIFICATION = #{record.skillQualification,jdbcType=VARCHAR},
      </if>
      <if test="record.secondYearInspectionResult != null">
        SECOND_YEAR_INSPECTION_RESULT = #{record.secondYearInspectionResult,jdbcType=VARCHAR},
      </if>
      <if test="record.thirdYearInspectionResult != null">
        THIRD_YEAR_INSPECTION_RESULT = #{record.thirdYearInspectionResult,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SYS_USER
    set ID = #{record.id,jdbcType=DECIMAL},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      ORG_NO = #{record.orgNo,jdbcType=VARCHAR},
      PHONE_NO = #{record.phoneNo,jdbcType=VARCHAR},
      LANDLINE = #{record.landline,jdbcType=VARCHAR},
      ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      ADRESS = #{record.adress,jdbcType=VARCHAR},
      ZIP_CODE = #{record.zipCode,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      EXTEND1 = #{record.extend1,jdbcType=VARCHAR},
      EXTEND2 = #{record.extend2,jdbcType=VARCHAR},
      LOGIN_TIME = #{record.loginTime,jdbcType=VARCHAR},
      LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      ERROR_COUNT = #{record.errorCount,jdbcType=DECIMAL},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      SEX = #{record.sex,jdbcType=VARCHAR},
      COMPANY = #{record.company,jdbcType=VARCHAR},
      POSITION = #{record.position,jdbcType=VARCHAR},
      POSITION_LEVEL = #{record.positionLevel,jdbcType=VARCHAR},
      BIRTH_DATE = #{record.birthDate,jdbcType=VARCHAR},
      POLITICS_STATUS = #{record.politicsStatus,jdbcType=VARCHAR},
      EDUCATION = #{record.education,jdbcType=VARCHAR},
      IN_POSITION_TIME = #{record.inPositionTime,jdbcType=VARCHAR},
      IN_SAME_POSITION_TIME = #{record.inSamePositionTime,jdbcType=VARCHAR},
      IN_SAME_POSITION_LEVEL_TIME = #{record.inSamePositionLevelTime,jdbcType=VARCHAR},
      INTO_BANK_TIME = #{record.intoBankTime,jdbcType=VARCHAR},
      LAST_YEAR_INSPECTION_RESULT = #{record.lastYearInspectionResult,jdbcType=VARCHAR},
      PUNISHMENT = #{record.punishment,jdbcType=VARCHAR},
      EXCEPTIONAL = #{record.exceptional,jdbcType=VARCHAR},
      AVOID = #{record.avoid,jdbcType=VARCHAR},
      ASPIRING_POSITION = #{record.aspiringPosition,jdbcType=VARCHAR},
      ASPIRING_POSITION_LEVEL = #{record.aspiringPositionLevel,jdbcType=VARCHAR},
      RECOMMENDATION_LETTER = #{record.recommendationLetter,jdbcType=VARCHAR},
      NOTE = #{record.note,jdbcType=VARCHAR},
      USERNO = #{record.userno,jdbcType=VARCHAR},
      ORG_TYPE = #{record.orgType,jdbcType=VARCHAR},
      ORG = #{record.org,jdbcType=VARCHAR},
      POSITION_SERIAL = #{record.positionSerial,jdbcType=VARCHAR},
      SKILL_LEVEL = #{record.skillLevel,jdbcType=VARCHAR},
      AGE = #{record.age,jdbcType=VARCHAR},
      SKILL_QUALIFICATION = #{record.skillQualification,jdbcType=VARCHAR},
      SECOND_YEAR_INSPECTION_RESULT = #{record.secondYearInspectionResult,jdbcType=VARCHAR},
      THIRD_YEAR_INSPECTION_RESULT = #{record.thirdYearInspectionResult,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>