<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nantian.mapper.sys.SysOutgoingInspectionMapper">
  <resultMap id="BaseResultMap" type="com.nantian.entity.sys.SysOutgoingInspection">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="CANDIDATE_NAME" jdbcType="VARCHAR" property="candidateName" />
    <result column="CHECK_DATE" jdbcType="DATE" property="checkDate" />
    <result column="CHECK_CONCLUSION" jdbcType="VARCHAR" property="checkConclusion" />
    <result column="CHECK_DATA" jdbcType="VARCHAR" property="checkData" />
    <result column="CREATION_TIME" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, CANDIDATE_NAME, CHECK_DATE, CHECK_CONCLUSION, CHECK_DATA, CREATION_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.nantian.entity.sys.SysOutgoingInspectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from SYS_OUTGOING_INSPECTION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SYS_OUTGOING_INSPECTION
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from SYS_OUTGOING_INSPECTION
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.nantian.entity.sys.SysOutgoingInspectionExample">
    delete from SYS_OUTGOING_INSPECTION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nantian.entity.sys.SysOutgoingInspection">
    insert into SYS_OUTGOING_INSPECTION (ID, CANDIDATE_NAME, CHECK_DATE, 
      CHECK_CONCLUSION, CHECK_DATA, CREATION_TIME, 
      UPDATE_TIME)
    values (#{id,jdbcType=DECIMAL}, #{candidateName,jdbcType=VARCHAR}, #{checkDate,jdbcType=DATE}, 
      #{checkConclusion,jdbcType=VARCHAR}, #{checkData,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.nantian.entity.sys.SysOutgoingInspection">
    insert into SYS_OUTGOING_INSPECTION
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="candidateName != null">
        CANDIDATE_NAME,
      </if>
      <if test="checkDate != null">
        CHECK_DATE,
      </if>
      <if test="checkConclusion != null">
        CHECK_CONCLUSION,
      </if>
      <if test="checkData != null">
        CHECK_DATA,
      </if>
      <if test="creationTime != null">
        CREATION_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="candidateName != null">
        #{candidateName,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null">
        #{checkDate,jdbcType=DATE},
      </if>
      <if test="checkConclusion != null">
        #{checkConclusion,jdbcType=VARCHAR},
      </if>
      <if test="checkData != null">
        #{checkData,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nantian.entity.sys.SysOutgoingInspectionExample" resultType="java.lang.Long">
    select count(*) from SYS_OUTGOING_INSPECTION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SYS_OUTGOING_INSPECTION
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.candidateName != null">
        CANDIDATE_NAME = #{record.candidateName,jdbcType=VARCHAR},
      </if>
      <if test="record.checkDate != null">
        CHECK_DATE = #{record.checkDate,jdbcType=DATE},
      </if>
      <if test="record.checkConclusion != null">
        CHECK_CONCLUSION = #{record.checkConclusion,jdbcType=VARCHAR},
      </if>
      <if test="record.checkData != null">
        CHECK_DATA = #{record.checkData,jdbcType=VARCHAR},
      </if>
      <if test="record.creationTime != null">
        CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SYS_OUTGOING_INSPECTION
    set ID = #{record.id,jdbcType=DECIMAL},
      CANDIDATE_NAME = #{record.candidateName,jdbcType=VARCHAR},
      CHECK_DATE = #{record.checkDate,jdbcType=DATE},
      CHECK_CONCLUSION = #{record.checkConclusion,jdbcType=VARCHAR},
      CHECK_DATA = #{record.checkData,jdbcType=VARCHAR},
      CREATION_TIME = #{record.creationTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nantian.entity.sys.SysOutgoingInspection">
    update SYS_OUTGOING_INSPECTION
    <set>
      <if test="candidateName != null">
        CANDIDATE_NAME = #{candidateName,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null">
        CHECK_DATE = #{checkDate,jdbcType=DATE},
      </if>
      <if test="checkConclusion != null">
        CHECK_CONCLUSION = #{checkConclusion,jdbcType=VARCHAR},
      </if>
      <if test="checkData != null">
        CHECK_DATA = #{checkData,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nantian.entity.sys.SysOutgoingInspection">
    update SYS_OUTGOING_INSPECTION
    set CANDIDATE_NAME = #{candidateName,jdbcType=VARCHAR},
      CHECK_DATE = #{checkDate,jdbcType=DATE},
      CHECK_CONCLUSION = #{checkConclusion,jdbcType=VARCHAR},
      CHECK_DATA = #{checkData,jdbcType=VARCHAR},
      CREATION_TIME = #{creationTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByUserId" parameterType="com.nantian.entity.sys.SysFlow">
    update SYS_FLOW
    SET OUTGOING_INSPECTION_ID = #{outgoingInspectionId,jdbcType=DECIMAL},
      OUTGOING_INSPECTION_RESULT = #{outgoingInspectionResult,jdbcType=VARCHAR},
      STEP13 = #{step13,jdbcType=VARCHAR}
    WHERE USERID =  #{userid,jdbcType=DECIMAL}
  </update>
</mapper>